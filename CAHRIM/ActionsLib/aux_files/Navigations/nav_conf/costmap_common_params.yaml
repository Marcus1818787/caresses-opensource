transform_tolerance: 3.

robot_base_frame: /base_footprint


# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
robot_radius: 0.25  # distance a circular robot should be clear of the obstacle 

# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular

#map_type: voxel

obstacle_layer:
  enabled:              true
  origin_z:             0.0
  z_resolution:         0.1
  z_voxels:             2
  unknown_threshold:    15
  mark_threshold:       0
  combination_method:   1
  track_unknown_space:  false    #true needed for disabling global path planning through unknown space
  obstacle_range: 1.1
  raytrace_range: 2.0
  origin_z: 0.0
  z_resolution: 0.1
  z_voxels: 2
  publish_voxel_map: false
  observation_sources:  laser_scan_sensor point_cloud_sensor
  laser_scan_sensor:
    data_type: LaserScan
    topic: /naoqi_driver_node/laser
    marking: true
    clearing: true
    min_obstacle_height: 0
    max_obstacle_height: 0.40

  point_cloud_sensor: 
    data_type: PointCloud2
    topic: /naoqi_driver_node/camera/depth_registered/points
    marking: true
    clearing: true
    min_obstacle_height: 0
    max_obstacle_height: 2


  # for debugging only, let's you see the entire voxel grid
#resolution: 0.1
#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
inflation_layer:
  enabled:              true
  cost_scaling_factor:  5 # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius:     0.35  # max. distance from an obstacle at which costs are incurred for planning paths.

static_layer:
  enabled:              true
